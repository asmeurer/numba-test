* Blackscholes

| Numba Version |      Python | Cuda |  NumPy Time |  Numba Time |
|---------------+-------------+------+-------------+-------------|
|         0.9.0 | 1166.122198 |      | 1163.949895 | 6364.418793 |
|         0.8.1 | 1170.525312 |      | 1172.363305 |  365.799403 |
|         0.8.0 | 1150.239301 |      | 1150.786304 |  366.230106 |

** Math functions used by Blackscholes

- fabs
- log
- exp
- sqrt

* Mandel

|                 Numba Version | Vectorize | CU |        Autojit |
|-------------------------------+-----------+----+----------------|
|                         0.9.0 |           |    | 0.413378000259 |
|                               |           |    | 0.377733945847 |
|                               |           |    | 0.345150947571 |
|-------------------------------+-----------+----+----------------|
|                         0.8.1 |           |    | 0.267106056213 |
|                               |           |    | 0.260750055313 |
|                               |           |    | 0.259781122208 |
|-------------------------------+-----------+----+----------------|
|                         0.8.0 |           |    |  0.27729010582 |
|                               |           |    | 0.268536806107 |
|                               |           |    | 0.255920171738 |
|-------------------------------+-----------+----+----------------|
| Removed the autojit decorator |           |    |  8.45351982117 |

* Mandel (with larger image, multiplied each dimension by 10)

| Numba Version |       Autojit |
|---------------+---------------|
|         0.9.0 | 6.01062583923 |
|               | 5.87451314926 |
|               | 5.84532213211 |
|---------------+---------------|
|         0.8.1 | 5.80409097672 |
|               | 5.82420301437 |
|               | 5.83612799644 |
|---------------+---------------|
|         0.8.0 | 5.81156802177 |
|               | 5.80174016953 |
|               | 5.8482170105  |

* Mandel with 1000 iterations (instead of the default 20)

| Numba Version |       Autojit |
|---------------+---------------|
|         0.9.0 | 2.02573299408 |
|               |  2.0584218502 |
|               |  2.0519490242 |
|---------------+---------------|
|         0.8.1 | 1.97202205658 |
|               | 1.95236301422 |
|               | 1.96435403824 |
|---------------+---------------|
|         0.8.0 | 1.97258806229 |
|               | 1.97673392296 |
|               | 1.97673392296 |

* Monte Carlo Pricer

| Numba Version | NumPy                  | Numba                  |
|---------------+------------------------+------------------------|
|         0.9.0 | 18.99 MStep per second | 21.67 MStep per second |
|               | 5.265635s              | 4.615251s              |
|---------------+------------------------+------------------------|
|         0.8.1 | 19.21 MStep per second | 13.37 MStep per second |
|               | 5.206505s              | 7.478213s              |
|---------------+------------------------+------------------------|
|         0.8.0 | 19.39 MStep per second | 16.03 MStep per second |
|               | 5.156585s              | 6.237782s              |

* nbody

| Numba Version | nbody                            | nbody Mark Harris                |
|---------------+----------------------------------+----------------------------------|
|         0.9.0 | 1825.900078 ms: 0.002692 GFLOP/s | 4066.952944 ms: 0.001209 GFLOP/s |
|         0.8.1 | 1817.068100 ms: 0.002705 GFLOP/s | 4067.687035 ms: 0.001208 GFLOP/s |
|         0.8.0 | 1903.918982 ms: 0.002582 GFLOP/s | 4039.033890 ms: 0.001217 GFLOP/s |

* Laplace 2D

Note: You have to break it after this first output

| Numba Version | Python                                          | Numba                                           |
|---------------+-------------------------------------------------+-------------------------------------------------|
|         0.9.0 | Jacobi relaxation Calculation: 4096 x 4096 mesh | Jacobi relaxation Calculation: 4096 x 4096 mesh |
|               | 0, 0.250000 (elapsed: 75.402862 s)              | 0, 0.250000 (elapsed: 2.813040 s)               |
|---------------+-------------------------------------------------+-------------------------------------------------|
|         0.8.1 |                                                 | Jacobi relaxation Calculation: 4096 x 4096 mesh |
|               |                                                 | 0, 0.250000 (elapsed: 2.644492 s)               |
|---------------+-------------------------------------------------+-------------------------------------------------|
|         0.8.0 |                                                 | Jacobi relaxation Calculation: 4096 x 4096 mesh |
|               |                                                 |     0, 0.250000 (elapsed: 2.636084 s)           |

* Bubblesort

| Numba Version | Output                  |
|---------------+-------------------------|
|         0.9.0 | Python 0.936146593094   |
|               | Numba 0.00115871429443  |
|               | Speedup 807.918395062 x |
|---------------+-------------------------|
|         0.8.1 | Python 0.892957282066   |
|               | Numba 0.00131599903107  |
|               | Speedup 678.539467725 x |
|---------------+-------------------------|
|         0.8.0 | Python 0.889819002151   |
|               | Numba 0.00108458995819  |
|               | Speedup 820.419731375 x |
|               |                         |

* Example

| Numba Version | Output                        |
|---------------+-------------------------------|
|         0.9.0 | Time for LLVM code = 0.014746 |
|               | Time for convolve = 0.040764  |
|---------------+-------------------------------|
|         0.8.1 | Time for LLVM code = 0.017178 |
|               | Time for convolve = 0.037990  |
|---------------+-------------------------------|
|         0.8.0 | Time for LLVM code = 0.017115 |
|               | Time for convolve = 0.038151  |
|               |                               |

* Sum

Don't trust this one. It has very high variation.

| Numba Version | Output                                                           |
|---------------+------------------------------------------------------------------|
|         0.9.0 | Result from python is -131.101832227 in 5.23710250854 (msec)     |
|               | Result from compiled is -131.101832227 in 0.0278949737549 (msec) |
|               | Speed up is 187.743589744                                        |
|---------------+------------------------------------------------------------------|
|         0.8.1 | Result from python is 2.56392423422 in 5.19490242004 (msec)      |
|               | Result from compiled is 2.56392423422 in 0.0128746032715 (msec)  |
|               | Speed up is 403.5                                                |
|---------------+------------------------------------------------------------------|
|         0.8.0 | Result from python is 36.5373168197 in 5.30195236206 (msec)      |
|               | Result from compiled is 36.5373168197 in 0.0200271606445 (msec)  |
|               | Speed up is 264.738095238                                        |
|               |                                                                  |

* Sum (modified with 10000 x 10000)

| Numba Version | Output                                                            |
|---------------+-------------------------------------------------------------------|
|         0.9.0 | 1. Result from compiled is 17807.005868 in 96.0628986359 (msec)   |
|               | 2. Result from compiled is -439.857393209 in 147.600889206 (msec) |
|               | 3. Result from compiled is -11188.4391763 in 95.5100059509 (msec) |
|---------------+-------------------------------------------------------------------|
|         0.8.1 | 1. Result from compiled is -13518.931727 in 97.051858902 (msec)   |
|               | 2. Result from compiled is 1944.19539822 in 97.5658893585 (msec)  |
|               | 3. Result from compiled is -9291.88723295 in 96.6360569 (msec)    |
|---------------+-------------------------------------------------------------------|
|         0.8.0 | 1. Result from compiled is 8005.61197178 in 97.9011058807 (msec)  |
|               | 2. Result from compiled is -2891.66920985 in 96.116065979 (msec)  |
|               | 3. Result from compiled is -5676.66598645 in 97.7380275726 (msec) |
|               |                                                                   |

* math-test.py

Note: these algorithms do not scale linearly with N

All times are in seconds

** sqrt

N = 10000

| Numba Version |           Python |           Numba |
|---------------+------------------+-----------------|
|         0.9.0 | 0.00170588493347 | 0.0743989944458 |
|               | 0.00174593925476 | 0.0611250400543 |
|               | 0.00184512138367 | 0.0618748664856 |
|               | 0.00171184539795 | 0.0614089965820 |
|---------------+------------------+-----------------|
|         0.8.1 | 0.00159692764282 | 0.0599839687347 |
|               | 0.00173020362854 | 0.0594990253448 |
|               | 0.00174212455750 | 0.0599339008331 |
|               | 0.00250196456909 | 0.0624308586121 |
|---------------+------------------+-----------------|
|         0.8.0 | 0.00171399116516 | 0.0785949230194 |
|               | 0.00183892250061 | 0.0675189495087 |
|               | 0.00175094604492 | 0.0603921413422 |
|               | 0.00170612335205 | 0.0645940303802 |


** log

N = 10000

| Numba Version |           Python |           Numba |
|---------------+------------------+-----------------|
|         0.9.0 | 0.00211095809937 | 0.0557370185852 |
|               | 0.00212287902832 | 0.0526371002197 |
|               | 0.00207209587097 | 0.0515320301056 |
|               | 0.00221204757690 | 0.0550639629364 |
|---------------+------------------+-----------------|
|         0.8.1 | 0.00210595130920 | 0.0521640777588 |
|               | 0.00208806991577 | 0.0521259307861 |
|               | 0.00212788581848 | 0.0508341789246 |
|               | 0.00238919258118 | 0.0524239540100 |
|---------------+------------------+-----------------|
|         0.8.0 | 0.00207805633545 | 0.0496821403503 |
|               | 0.00223398208618 | 0.0613958835602 |
|               | 0.00210213661194 | 0.0539150238037 |
|               | 0.00217890739441 | 0.0513410568237 |


** exp

N = 10000

| Numba Version |           Python |           Numba |
|---------------+------------------+-----------------|
|         0.9.0 | 0.00228691101074 |  0.255646944046 |
|               | 0.00221204757690 |  0.140511035919 |
|               | 0.00229001045227 |  0.137248039246 |
|               | 0.00227713584900 |  0.132997035980 |
|---------------+------------------+-----------------|
|         0.8.1 | 0.01166296005250 | 0.1930918693540 |
|               | 0.00220513343811 | 0.0667281150818 |
|               | 0.00230097770691 | 0.0627601146698 |
|               | 0.00225305557251 | 0.0624299049377 |
|---------------+------------------+-----------------|
|         0.8.0 | 0.00550794601440 | 0.1338150501250 |
|               | 0.00268292427063 | 0.0661668777466 |
|               | 0.00226402282715 | 0.0609180927277 |
|               | 0.00227808952332 | 0.0671999454498 |

** fabs

N = 10000

| Numba Version |           Python |           Numba |
|---------------+------------------+-----------------|
|         0.9.0 | 0.00208592414856 |  0.120792150497 |
|               | 0.00222301483154 |  0.118566989899 |
|               | 0.00220799446106 |  0.118232011795 |
|               | 0.00211191177368 |  0.121277093887 |
|---------------+------------------+-----------------|
|         0.8.1 | 0.00221705436707 | 0.0547339916229 |
|               | 0.00213289260864 | 0.0527970790863 |
|               | 0.00337409973145 | 0.0578389167786 |
|               | 0.00215196609497 | 0.0544960498810 |
|---------------+------------------+-----------------|
|         0.8.0 | 0.00211405754089 | 0.0533199310303 |
|               | 0.00216984748840 | 0.0522420406342 |
|               | 0.00223708152771 | 0.0520491600037 |
|               | 0.00219821929932 | 0.0534231662750 |
